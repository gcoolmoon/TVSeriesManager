<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	 xmlns:context="http://www.springframework.org/schema/context"
	 xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
     http://www.springframework.org/schema/mvc
     http://www.springframework.org/schema/mvc/spring-mvc.xsd">
       
   
	
	<!--  <context:component-scan base-package="extraCredit.DAO" />
	<context:annotation-config />
   -->
   
 	<mvc:annotation-driven />
    <context:component-scan base-package="extraCredit.DAO" />
    
 
    <tx:annotation-driven transaction-manager="txManager"/>
	<bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://localhost/cs544"/>
        <property name="username"  value="root"/>
        <property name="password" value="root"/>   
	</bean>
	
	<bean id="hibernateProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
	 	<property name="properties">
	 		<props>
	 			<prop key="hibernate.hbm2ddl.auto">create</prop>
	 			<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
	 			<prop key="connection.pool_size">1</prop>
	 			<prop key="hibernate.show_sql">true</prop>
	 			<prop key="hibernate.current_session_context_class">thread</prop>
	 			<prop key="hibernate.use_sql_comments">true</prop>
				<prop key="hibernate.format_sql">false</prop>
	 		</props>
	 	</property>
	</bean>
	
	<bean id="artist" class="extraCredit.domain.Artist"/>
    <bean id="tvseries" class="extraCredit.domain.TVSeries"/>

    <bean id="artistDao" class="extraCredit.DAO.ArtistDao">
      <property name="sf" ref="sessionFactory"></property>
    </bean>
    
    <bean id="tvseriesDao" class="extraCredit.DAO.TVSeriesDao">
      <property name="sf" ref="sessionFactory"></property>
    </bean>
        
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
    	<property name="dataSource" ref="dataSource"/>
    	<property name="hibernateProperties" ref="hibernateProperties"/>
    	<property name="packagesToScan" value="extraCredit.domain"></property>
    </bean>
	
		<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	
	<!-- Lets us find resources (.html etc) through the default servlet -->
	<mvc:default-servlet-handler/> 
	
		<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources/ directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	

</beans>
